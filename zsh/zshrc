# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/rob/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="gentoo"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  yarn
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
#
#--------------------------------------
# Aliases
# -------------------------------------

if hash gls 2>/dev/null; then
  alias l='gls --color -h -G --group-directories-first'
  alias ls='gls --color -h -G --group-directories-first'
  alias ll='gls --color -h -G --group-directories-first -a -l -F'
  alias la='gls --color -h -G --group-directories-first -a'
else
  alias l='ls --color -h -G --group-directories-first'
  alias ls='ls --color -h -G --group-directories-first'
  alias ll='ls --color -h -G --group-directories-first -a -l -F'
  alias la='ls --color -h -G --group-directories-first -a'
fi

alias c='clear'
alias C='clear; $(history -p !!)'

alias ag='clear; ag'
alias ack='clear; ack-grep'
alias gulp='clear; gulp'
alias flow='clear; flow'
alias cnpm='clear; npm'

alias tn='tmux new -s'
alias ta='tmux attach'
alias tat='tmux attach -t'
alias td='tmux detach'

alias dja='django-admin.py'
alias djm='python manage.py'

alias gs="clear; git status"
alias gd="clear; git diff; git status"
alias gdc="clear; git diff --cached; git status"
alias gca="git commit -a"
alias gpp="git pull; git push"
alias gl="clear; git sl"
alias gr="clear; git slr"
alias gnbd="git checkout dev && git pull && git checkout -b"

alias be='bundle exec'

# alias ngrokb='ngrok -authtoken Lc0BZ4kOjgyuIvEF4n0x -hostname bit.ngrok.com'
# alias ngrokh='ngrok -authtoken Lc0BZ4kOjgyuIvEF4n0x -hostname'
# alias ngrok='ngrok -authtoken Lc0BZ4kOjgyuIvEF4n0x'

if hash trash-put 2>/dev/null; then
    alias trash='trash-put'
fi


#--------------------------------------
# Environment Variables
# -------------------------------------

if hash nvim 2>/dev/null; then
    export EDITOR=nvim
else
    export EDITOR=vim
fi

case "$TERM" in
    screen*)
        ;;
    *)
        export TERM=xterm-256color
        ;;
esac


#--------------------------------------
# NVM
# -------------------------------------

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


#--------------------------------------
# AVN
# -------------------------------------

[[ -s "$HOME/.avn/bin/avn.sh" ]] && source "$HOME/.avn/bin/avn.sh" # load avn


#--------------------------------------
# RVM
# -------------------------------------

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"


# -------------------------------------
# Virtualenv
# -------------------------------------

export VIRTUAL_ENV_DISABLE_PROMPT=1
[[ -s "$HOME/.venv/base/bin/activate" ]] && source "$HOME/.venv/base/bin/activate"


# -------------------------------------
# thefuck
# -------------------------------------

eval $(thefuck --alias f)

